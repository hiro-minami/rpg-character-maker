{"version":3,"sources":["style/index.ts","model/index.ts","utils/index.ts","App.tsx","index.tsx"],"names":["cardStyle","background","maleImages","Map","set","femaleImages","traitsForMale","traitsForFemale","traitsForMaleHero","traitsForFemaleHero","scoreOfStrength","scoreOfAgility","scoreOfResilience","scoreOfWisdom","scoreOfLuck","getPath","gender","job","get","getTraitList","App","useState","name","setName","setGender","setJob","traits","setTrait","path","setPath","traitList","setTraitList","strength","setStrength","agility","setAgility","resilience","setResilience","wisdom","setWisdom","luck","setLuck","changeGender","e","newGender","target","value","newTrait","setStatus","trait","score","Math","floor","getStrength","toString","getAgility","getResilience","getWisdom","getLuck","className","style","src","alt","htmlFor","type","id","onChange","checked","aria-label","newJob","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b18cab7d.chunk.js","sourcesContent":["export const cardStyle = {\n    background: \"#313031\"\n};","// Images\nconst maleImages = new Map<string, string>();\nmaleImages.set(\n  \"Mage\",\n  \"https://recursionist.io/img/dashboard/lessons/quickstart/male-mage.png\"\n);\nmaleImages.set(\n  \"Warrior\",\n  \"https://recursionist.io/img/dashboard/lessons/quickstart/male-warrior.png\"\n);\nmaleImages.set(\n  \"Hero\",\n  \"https://recursionist.io/img/dashboard/lessons/quickstart/male-hero.png\"\n);\n\nconst femaleImages = new Map<string, string>();\nfemaleImages.set(\n  \"Mage\",\n  \"https://recursionist.io/img/dashboard/lessons/quickstart/female-mage.png\"\n);\nfemaleImages.set(\n  \"Warrior\",\n  \"https://recursionist.io/img/dashboard/lessons/quickstart/female-warrior.png\"\n);\nfemaleImages.set(\n  \"Hero\",\n  \"https://recursionist.io/img/dashboard/lessons/quickstart/female-hero.png\"\n);\n\n// Traits\nconst traitsForMale: string[] = [\"Everyman\", \"Bat out of hell\", \"Lucky devil\"];\nconst traitsForFemale: string[] = [\"Everyman\", \"Bat out of hell\", \"Tomboy\"];\nconst traitsForMaleHero: string[] = [\n  \"Everyman\",\n  \"Bat out of hell\",\n  \"Brave\",\n  \"Lucky devil\",\n];\nconst traitsForFemaleHero: string[] = [\n  \"Everyman\",\n  \"Bat out of hell\",\n  \"Brave\",\n  \"Tomboy\",\n];\n\n// Scores\nconst scoreOfStrength = new Map<string, number>();\nscoreOfStrength.set(\"Mage\", 100);\nscoreOfStrength.set(\"Warrior\", 110);\nscoreOfStrength.set(\"Hero\", 120);\n\nconst scoreOfAgility = new Map<string, number>();\nscoreOfAgility.set(\"Mage\", 120);\nscoreOfAgility.set(\"Warrior\", 110);\nscoreOfAgility.set(\"Hero\", 100);\n\nconst scoreOfResilience = new Map<string, number>();\nscoreOfResilience.set(\"Mage\", 110);\nscoreOfResilience.set(\"Warrior\", 120);\nscoreOfResilience.set(\"Hero\", 100);\n\nconst scoreOfWisdom = new Map<string, number>();\nscoreOfWisdom.set(\"Mage\", 120);\nscoreOfWisdom.set(\"Warrior\", 100);\nscoreOfWisdom.set(\"Hero\", 110);\n\nconst scoreOfLuck = new Map<string, number>();\nscoreOfLuck.set(\"Mage\", 100);\nscoreOfLuck.set(\"Warrior\", 110);\nscoreOfLuck.set(\"Hero\", 120);\n\nexport {\n  maleImages,\n  femaleImages,\n  traitsForMale,\n  traitsForFemale,\n  traitsForMaleHero,\n  traitsForFemaleHero,\n  scoreOfStrength,\n  scoreOfAgility,\n  scoreOfResilience,\n  scoreOfWisdom,\n  scoreOfLuck,\n};\n","import {\n  maleImages,\n  femaleImages,\n  traitsForMale,\n  traitsForMaleHero,\n  traitsForFemale,\n  traitsForFemaleHero,\n  scoreOfStrength,\n  scoreOfAgility,\n  scoreOfResilience,\n  scoreOfWisdom,\n  scoreOfLuck,\n} from \"../model\";\n\nexport const getPath = (gender: string, job: string) => {\n  if (gender === \"Male\") return maleImages.get(job)!;\n  else return femaleImages.get(job)!;\n};\n\nexport const getTraitList = (gender: string, job: string) => {\n  if (gender === \"Male\") {\n    if (job === \"Hero\") return traitsForMaleHero;\n    else return traitsForMale;\n  } else {\n    if (job === \"Hero\") return traitsForFemaleHero;\n    else return traitsForFemale;\n  }\n};\n\nexport const getStrength = (job: string, trait: string) => {\n  let score = scoreOfStrength.get(job)!;\n  return trait === \"Brave\" || trait === \"Tomboy\"\n    ? Math.floor(score! * 1.1)\n    : score;\n};\n\nexport const getAgility = (job: string, trait: string) => {\n  let score = scoreOfAgility.get(job)!;\n  if (trait === \"Brave\" || trait === \"Tomboy\") return Math.floor(score! * 1.1);\n  else if (trait === \"Bat out of hell\") return Math.floor(score! * 1.4);\n  else return score!;\n};\n\nexport const getResilience = (job: string) => {\n  return scoreOfResilience.get(job)!;\n};\n\nexport const getWisdom = (job: string) => {\n  return scoreOfWisdom.get(job)!;\n};\n\nexport const getLuck = (job: string, trait: string) => {\n  let score = scoreOfLuck.get(job)!;\n  if (trait === \"Brave\") return Math.floor(score! * 1.2);\n  else if (trait === \"Lucky devil\") return Math.floor(score! * 1.5);\n  else return score!;\n};\n","import { useState } from \"react\";\nimport { cardStyle } from \"./style\";\nimport {\n  getPath,\n  getTraitList,\n  getStrength,\n  getAgility,\n  getResilience,\n  getWisdom,\n  getLuck,\n} from \"./utils\";\nimport { traitsForMaleHero } from \"./model\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./app.css\";\n\nfunction App() {\n  const [name, setName] = useState(\"hiromina\");\n  const [gender, setGender] = useState(\"Male\");\n  const [job, setJob] = useState(\"Hero\");\n  const [traits, setTrait] = useState(\"Everyman\");\n  const [path, setPath] = useState(\n    \"https://recursionist.io/img/dashboard/lessons/quickstart/male-hero.png\"\n  );\n  const [traitList, setTraitList] = useState(traitsForMaleHero);\n\n  const [strength, setStrength] = useState(\"120\");\n  const [agility, setAgility] = useState(\"100\");\n  const [resilience, setResilience] = useState(\"100\");\n  const [wisdom, setWisdom] = useState(\"110\");\n  const [luck, setLuck] = useState(\"120\");\n\n  const changeGender = (e: any) => {\n    const newGender = e.target.value;\n    setGender(newGender);\n    setPath(getPath(newGender, job));\n    setTraitList(getTraitList(newGender, job));\n    if (newGender === \"Female\" && traits === \"Lucky devil\") {\n      const newTrait = \"Tomboy\";\n      setTrait(newTrait);\n      setStatus(job, newTrait);\n    } else if (newGender === \"Male\" && traits === \"Tomboy\") {\n      const newTrait = \"Lucky devil\";\n      setTrait(newTrait);\n      setStatus(job, newTrait);\n    }\n  };\n\n  const changeJob = (e: any) => {\n    const newJob = e.target.value;\n    setJob(newJob);\n    setPath(getPath(gender, newJob));\n    setTraitList(getTraitList(gender, newJob));\n    setStatus(newJob, traits);\n  };\n\n  const changeTrait = (e: any) => {\n    const newTrait = e.target.value;\n    setTrait(newTrait);\n    setStatus(job, newTrait);\n  };\n\n  const setStatus = (job: string, trait: string) => {\n    setStrength(getStrength(job, trait).toString());\n    setAgility(getAgility(job, trait).toString());\n    setResilience(getResilience(job).toString());\n    setWisdom(getWisdom(job).toString());\n    setLuck(getLuck(job, trait).toString());\n  };\n\n  return (\n    <div className=\"game-maker\">\n      <div className=\"container pt-5\">\n        <h5 className=\"text-white font-weight-bold\">表示エリア</h5>\n        <div className=\"card mb-3 rounded-3\" style={cardStyle}>\n          <div className=\"row g-0 px-2\">\n            <div className=\"col-md-3 d-flex justify-content-center align-items-center\">\n              <div className=\"col-12 border border-white border-5 rounded-3 img-fit\">\n                <img src={path} className=\"img-fluid rounded-start\" alt=\"...\" />\n              </div>\n            </div>\n            <div className=\"col-md-9 text-white\">\n              <div className=\"card-body px-2\">\n                <div className=\"border border-white border-4 rounded-3 px-3 py-1\">\n                  <h5 className=\"card-title\">Name : {name}</h5>\n                  <h5 className=\"card-title\">Class : {job}</h5>\n                  <h5 className=\"card-title\">Gender : {gender}</h5>\n                  <h5 className=\"card-title m-0\">Traits : {traits}</h5>\n                </div>\n                <div className=\"mt-2 border border-white border-4 rounded-3 px-3 py-1\">\n                  <h5 className=\"card-title\">Strength : {strength}</h5>\n                  <h5 className=\"card-title\">Agility : {agility}</h5>\n                  <h5 className=\"card-title\">Resilience : {resilience}</h5>\n                  <h5 className=\"card-title\">Wisdom : {wisdom}</h5>\n                  <h5 className=\"card-title m-0\">Luck : {luck}</h5>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container py-5\">\n        <h5 className=\"text-white font-weight-bold\">入力エリア</h5>\n        <div className=\"mb-3 row\">\n          <label\n            htmlFor=\"inputName\"\n            className=\"col-sm-1 col-form-label text-white\"\n          >\n            Name\n          </label>\n          <div className=\"col-sm-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"inputName\"\n              value={name}\n              onChange={(e: { target: { value: any } }) =>\n                setName(e.target.value)\n              }\n            />\n          </div>\n        </div>\n        <div className=\"mb-3 row\">\n          <label\n            htmlFor=\"inputName\"\n            className=\"col-sm-1 col-form-label text-white\"\n          >\n            Gender\n          </label>\n          <div className=\"col-sm-3 mt-2\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineRadio1\"\n                value=\"Male\"\n                onChange={changeGender}\n                checked={gender === \"Male\"}\n              />\n              <label\n                className=\"form-check-label text-white\"\n                htmlFor=\"inlineRadio1\"\n              >\n                Male\n              </label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"inlineRadioOptions\"\n                id=\"inlineRadio2\"\n                value=\"Female\"\n                onChange={changeGender}\n                checked={gender === \"Female\"}\n              />\n              <label\n                className=\"form-check-label text-white\"\n                htmlFor=\"inlineRadio2\"\n              >\n                Female\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className=\"mb-3 row\">\n          <label\n            htmlFor=\"inputName\"\n            className=\"col-sm-1 col-form-label text-white\"\n          >\n            Class\n          </label>\n          <div className=\"col-sm-3\">\n            <select\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              onChange={changeJob}\n            >\n              <option value=\"Hero\">Hero</option>\n              <option value=\"Warrior\">Warrior</option>\n              <option value=\"Mage\">Mage</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"mb-3 row\">\n          <label\n            htmlFor=\"inputName\"\n            className=\"col-sm-1 col-form-label text-white\"\n          >\n            Traits\n          </label>\n          <div className=\"col-sm-3\">\n            <select\n              className=\"form-select\"\n              aria-label=\"Default select example\"\n              onChange={changeTrait}\n            >\n              {traitList.map((trait, index) => (\n                <option key={index} value={trait}>\n                  {trait}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}